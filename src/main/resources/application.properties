# If you're using an H2 in-memory database, you can add the following configuration to application.properties:
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.h2.console.enabled=true

spring.application.name=airbnb-property-management
spring.datasource.url=jdbc:postgresql://localhost:5432/airbnb_management
spring.datasource.username=airbnb
spring.datasource.password=airbnb123@21
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.connection.isolation=READ_COMMITTED
spring.jpa.open-in-view=false
# jwt.secret=your-secret-key
# jwt.expiration=86400000
server.port=8081
logging.level.com.airbnb=DEBUG
logging.level.root=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
# Spring Profiles
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Datasource Configuration Local
# spring.datasource.url=${SPRING_DATASOURCE_URL}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/airbnb_management}
# spring.datasource.username=${DATABASE_USERNAME:postgres}
# spring.datasource.password=${DATABASE_PASSWORD:postgres}
# server.port=${PORT:8080}